name: npm test

on: push

jobs:
 test:
  name: test npm
  runs-on: ubuntu-latest
  strategy:
   matrix:
    node: ['12', '14']

  env:
   CARGO_HOME: ${{ env.GITHUB_WORKSPACE }}.cargo
   CARGO_INSTALL_ROOT: ${{ env.GITHUB_WORKSPACE }}.cargo

  steps:
   # - run: export CARGO_HOME=$GITHUB_WORKSPACE/.cargo
   # - run: export CARGO_INSTALL_ROOT=$CARGO_HOME/bin
   # - run: export PATH=$CARGO_INSTALL_ROOT:$PATH
   # - run: echo $PATH
   - uses: actions/checkout@v2

   # - uses: Swatinem/rust-cache@v1
   - uses: actions/cache@v2
     with:
       path: |
         $CARGO_HOME/registry
         $CARGO_HOME/git
         $CARGO_INSTALL_ROOT
         target
       key: ${{ runner.os }}-cargo-${{ github.ref }}
   - run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
   #
   # - uses: actions-rs/toolchain@v1
   #   with:
   #    toolchain: stable
   - run: cargo install wrangler
   - run: |
   which wrangler
   # - uses: actions/setup-node@v2-beta
   #   with:
   #     node-version: ${{ matrix.node }}
   # - run: npm install
   # # - uses: cloudflare/wrangler-action@1.3.0
   # #   with:
   # #    apiToken: ${{ secrets.CF_API_TOKEN }}
   # #    publish: false
   # #    preCommands: wrangler build
   # - run: wrangler dev &
   # - run: while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' 127.0.0.1:8787)" != "200" ]]; do sleep 1 && echo 'waiting for wrangler'; done
   # - run: npm test
